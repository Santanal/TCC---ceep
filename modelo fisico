CREATE TABLE tb_cidades (
 codcidades INT PRIMARY KEY AUTO_INCREMENT,
 Nome VARCHAR(30) NOT NULL,
 Estado VARCHAR(2) NOT NULL  CHECk (estado in('PR'))
);

CREATE TABLE tb_modelos
(
 Ano INT NOT NULL,
 codmodelos INT PRIMARY KEY AUTO_INCREMENT,
 modelos VARCHAR(30) NOT NULL
);

CREATE TABLE tb_marcas
(
 codmarcas INT PRIMARY KEY AUTO_INCREMENT,
 nome VARCHAR(30) NOT NULL
);

CREATE TABLE tb_carros
(
 codcarros INT PRIMARY KEY AUTO_INCREMENT,
 ano INT NOT NULL,
 nome VARCHAR(30) NOT NULL,
 Ativo VARCHAR(1) NOT NULL DEFAULT 'S',
 CHECK (Ativo LIKE ('S','N'))
);

CREATE TABLE tb_fornecedores
(
 codfornecedores INT PRIMARY KEY,
 nome VARCHAR(50) NOT NULL,
 fone BIGINT,
 email VARCHAR(30),
 Ativo VARCHAR(1) NOT NULL DEFAULT 'S',
 CHECK (Ativo LIKE ('S','N'))
);

CREATE TABLE tb_clientes (
 codclientes INT PRIMARY KEY AUTO_INCREMENT,
 nome VARCHAR(30) NOT NULL,
 cpf BIGINT NOT NULL,
 fone BIGINT NOT NULL,
 cep BIGINT,
 ativo VARCHAR(1) NOT NULL DEFAULT 'S',
 complemento VARCHAR(50),
 rua VARCHAR(50) NOT NULL,
 Numero INT NOT NULL,
 bairro VARCHAR(30) NOT NULL,
 tipo VARCHAR(1) NOT NULL DEFAULT 'C',
 datanasccliente DATE NOT NULL CHECK(datanasccliente in ('idade'<=1923)),
 codcidades INT NOT NULL,
 CHECK (Ativo ('S','N') AND Tipo ('C','A')),
 CONSTRAINT fkcidades FOREIGN KEY (codcidades) REFERENCES tb_cidades(codcidades)
);


CREATE TABLE tb_vendas
(
 codvendas INT PRIMARY KEY AUTO_INCREMENT,
 datavenda DATE NOT NULL,
 tipo_pagamento VARCHAR(30) NOT NULL,
 observaÃ§oes VARCHAR(50),
 Valor_entrega INT NOT NULL,
 codclientes INT,
 CONSTRAINT fkclientes FOREIGN KEY (codclientes) REFERENCES tb_clientes(codclientes)
);


CREATE TABLE tb_vendas_carros
(
 codvendascarros INT PRIMARY KEY AUTO_INCREMENT,
 Valor INT NOT NULL,
 Quantidade INT NOT NULL,
 codcarros INT,
 codvendas INT,
 CONSTRAINT fkcarros FOREIGN KEY (codcarros) REFERENCES tb_carros(codcarros),
 CONSTRAINT fkvendas FOREIGN KEY (codvendas) REFERENCES tb_vendas(codvendas)
);


CREATE TABLE tb_marca_modelos_fornecedores
(
 codmarcasmodelosfornecedores INT PRIMARY KEY AUTO_INCREMENT,
 codmarcas INT,
 codmodelos INT,
 codfornecedores INT,
 CONSTRAINT fkmarcas FOREIGN KEY (codmarcas) REFERENCES tb_marcas(codmarcas),
 CONSTRAINT fkmodelos FOREIGN KEY (codmodelos) REFERENCES tb_modelos(codmodelos),
 CONSTRAINT fkfornecedores FOREIGN KEY (codfornecedores) REFERENCES tb_fornecedores(codfornecedores)
);
